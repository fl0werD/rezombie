#pragma once

namespace vhooks {

    enum class HookIndex {
        // Entity
        Spawn = 0,
        Precache,
        Restart,
        KeyValue,
        Save,
        Restore,
        ObjectCaps,
        Activate,
        SetObjectCollisionBox,
        Classify,
        DeathNotice,
        TraceAttack,
        TakeDamage,
        TakeHealth,
        Killed,
        BloodColor,
        TraceBleed,
        IsTriggered,
        MyMonsterPointer,
        MySquadMonsterPointer,
        GetToggleState,
        AddPoints,
        AddPointsToTeam,
        AddPlayerItem,
        RemovePlayerItem,
        GiveAmmo,
        GetDelay,
        IsMoving,
        OverrideReset,
        DamageDecal,
        SetToggleState,
        OnCreate,
        OnDestroy,
        OnControls,
        IsSneaking,
        IsAlive,
        IsBspModel,
        ReflectGauss,
        HasTarget,
        IsInWorld,
        IsPlayer,
        IsNetClient,
        TeamId,
        GetNextTarget,
        Think,
        Touch,
        Use,
        Blocked,
        Respawn,
        UpdateOwner,
        FBecomeProne,
        Center,
        EyePosition,
        EarPosition,
        BodyTarget,
        Illumination,
#if defined(_WIN32)
        FVecVisible,
        FVisible,
#else
        FVisible,
        FVecVisible,
#endif

        // Animating < Delay < Entity
        Anim_HandleAnimEvent,

        // Toggle < Animating
        Toggle_GetToggleState = GetToggleState,
        Toggle_GetDelay = GetDelay,

        // Monster < Toggle
        Monster_ChangeYaw = Anim_HandleAnimEvent + 1,
        Monster_HasHumanGibs,
        Monster_HasAlienBibs,
        Monster_FadeMonster,
        Monster_GibMonster,
        Monster_GetDeathActivity,
        Monster_BecomeDead,
        Monster_ShouldFadeOnDeath,
        Monster_IRelationShip,
        Monster_PainSound,
        Monster_ResetMaxSpeed,
        Monster_ReportAiState,
        Monster_MonsterInitDead,
        Monster_Look,
        Monster_BestVisibleEnemy,

#if defined(_WIN32)
        Monster_FVecInViewCone,
        Monster_FInViewCone,
#else
        Monster_FInViewCone,
        Monster_FVecInViewCone,
#endif

        // Player < Monster
        Player_Jump,
        Player_Duck,
        Player_PreThink,
        Player_PostThink,
        Player_GetGunPosition,
        Player_IsBot,
        Player_UpdateClientData,
        Player_ImpulseCommands,
        Player_RoundRespawn,
        Player_GetAutoAimVector,
        Player_Blind,
        Player_OnTouchingWeapon,

        // PlayerItem < Animating
        Item_AddToPlayer = Anim_HandleAnimEvent + 1,
        Item_AddDuplicate,
        Item_GetItemInfo,
        Item_CanDeploy,
        Item_CanDrop,
        Item_Deploy,
        Item_IsWeapon,
        Item_CanHolster,
        Item_Holster,
        Item_UpdateItemInfo,
        Item_PreFrame,
        Item_PostFrame,
        Item_Drop,
        Item_Kill,
        Item_AttachToPlayer,
        Item_PrimaryAmmoIndex,
        Item_SecondaryAmmoIndex,
        Item_UpdateClientData,
        Item_GetWeaponPtr,
        Item_GetMaxSpeed,
        Item_ItemSlot,

        // PlayerWeapon < PlayerItem
        Weapon_ExtractAmmo,
        Weapon_ExtractClipAmmo,
        Weapon_AddWeapon,
        Weapon_PlayEmptySound,
        Weapon_ResetEmptySound,
        Weapon_SendWeaponAnim,
        Weapon_IsUseable,
        Weapon_PrimaryAttack,
        Weapon_SecondaryAttack,
        Weapon_Reload,
        Weapon_WeaponIdle,
        Weapon_RetireWeapon,
        Weapon_ShouldWeaponIdle,
        Weapon_UseDecrement,

        indexBegin = Spawn,
        indexEnd = Weapon_UseDecrement,
    };
}
